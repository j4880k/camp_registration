These don't all have tests written, but should

* User Can Create Account [User]
* User Can Login to Account
* User Can Create Participants (campers) [Person]
* User Can create contacts [SimpleContact]
	- currently created as part of a registration
	- create or select simple contact during event registration
	- create simple contact from account preferences
* User Can Create Registration [Person/Registration association]
* User Can 


http://inagehi.harkerscorner.net
Sign-in or Sign-up

Theme = "The cross faxtor"

Overflow trailer - 

Directors need
	* realtime info
	* cabin assignment
	* Discalimer
	* nurse notes - new role in can: abilities???
	
2013.03.30 - Need to add a little content management mechanism
	*** I want to have the ability to use markdown here, though I likely will end up someday stripping out HTML***
	*** RedCarpet = Markdown to HTML
	*** Pygments = Syntax highlighting
	*** so to gather the text we need a field the user enters text into, then a rendered_text field that is 
	*** 	updated in the before_save filter (see outdated http://railscasts.com/episodes/272-markdown-with-redcarpet )
	***		also printed Rails3_markdown_pygments_redcarpet.pdf in inagehi folder.
	---> This feature is stubbed so it can be controlled with start/effective dates.
	---> This feature is stubbed for rendered_content (maybe using redcarpet)
	Table MarkdownFragment
	columns:
		id:integer 
		key:string #this is a direct lookup value
		priority:number default=>1 #this helps to arrange competing displays if necessary
		is_active:boolean => default:false
		content:text (this will be displayed)
		rendered_content: text (this is where markdown is converted to HTML)
		publish_start:date # (for being able to just code and forget)
		publish_end:date # (for being able to just code and forget)
		created_by:number
		notes:text (this is details, usage etc.)
		
		
	